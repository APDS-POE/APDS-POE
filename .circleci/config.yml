version: 2.1

jobs:
  # Job to print "Hello, World!"
  say-hello:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  # SonarQube scan job using the pre-built SonarQube CLI image
  sonarqube:
    working_directory: ~/build
    docker:
      - image: sonarsource/sonar-scanner-cli:latest
    resource_class: small
    steps:
      - checkout
      - run: |
          # Set the branch name for SonarQube scan
          SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
          echo "Sonar branch value is: $SONAR_BRANCH"
          echo "Sonar org value is: $SONAR_ORG"
          echo "Sonar project key is: $SONAR_PROJECT_KEY"
          # Run SonarQube scanner
          sonar-scanner \
            -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
            -Dsonar.organization="$SONAR_ORG" \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login="$SONAR_TOKEN" \
            -Dsonar.branch.name="$SONAR_BRANCH" \
            -Dsonar.sources="." \
            -Dsonar.exclusions="**/android/**,**/ios/**"

workflows:
  build-and-scan:
    jobs:
      - say-hello
      - sonarqube
version: 2.1


jobs:
  # Job to print "Hello, World!"
  say-hello:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  # SonarQube scan job
  sonarqube:
    working_directory: ~/build
    docker:
      - image: sonarsource/sonar-scanner-cli
    resource_class: small
    steps:
      - run: find .
      - attach_workspace:
          at: /workspace
      - run: |
          SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
          echo "Sonar branch value is: "$SONAR_BRANCH
          echo "Sonar org value is: "$SONAR_ORG
          sonar-scanner \
            -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
            -Dsonar.organization="$SONAR_ORG" \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.exclusions="**/android/**,**/ios/**" \
            -Dsonar.login="$SONAR_TOKEN" \
            -Dsonar.branch.name="$SONAR_BRANCH" \
            -Dsonar.sources="."

# Workflows to run both jobs
workflows:
  build-and-scan:
    jobs:
      - say-hello
      - sonarqube
